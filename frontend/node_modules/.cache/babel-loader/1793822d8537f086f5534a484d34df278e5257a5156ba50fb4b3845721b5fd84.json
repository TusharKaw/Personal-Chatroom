{"ast":null,"code":"import { io } from 'socket.io-client';\nlet socket;\nexport const initializeSocket = () => {\n  socket = io('http://localhost:5000', {\n    withCredentials: true\n  });\n  socket.on('connect', () => {\n    console.log('Connected to socket server:', socket.id);\n  });\n  socket.on('disconnect', () => {\n    console.log('Disconnected from socket server');\n  });\n  return socket;\n};\nexport const getSocket = () => {\n  if (!socket) {\n    return initializeSocket();\n  }\n  return socket;\n};\nexport const joinChannel = channelId => {\n  const socketInstance = getSocket();\n  socketInstance.emit('join_channel', channelId);\n};\nexport const leaveChannel = channelId => {\n  const socketInstance = getSocket();\n  socketInstance.emit('leave_channel', channelId);\n};\nexport const sendMessage = messageData => {\n  const socketInstance = getSocket();\n  socketInstance.emit('send_message', messageData);\n};\nexport const subscribeToMessages = callback => {\n  const socketInstance = getSocket();\n  socketInstance.on('receive_message', message => {\n    callback(message);\n  });\n};\nexport const unsubscribeFromMessages = () => {\n  const socketInstance = getSocket();\n  socketInstance.off('receive_message');\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n  }\n};","map":{"version":3,"names":["io","socket","initializeSocket","withCredentials","on","console","log","id","getSocket","joinChannel","channelId","socketInstance","emit","leaveChannel","sendMessage","messageData","subscribeToMessages","callback","message","unsubscribeFromMessages","off","disconnectSocket","disconnect"],"sources":["/Users/tusharkaw/Downloads/GIT_Porjects_v2/Personal-Chatroom/frontend/src/utils/chatService.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nlet socket;\n\nexport const initializeSocket = () => {\n  socket = io('http://localhost:5000', {\n    withCredentials: true,\n  });\n\n  socket.on('connect', () => {\n    console.log('Connected to socket server:', socket.id);\n  });\n\n  socket.on('disconnect', () => {\n    console.log('Disconnected from socket server');\n  });\n\n  return socket;\n};\n\nexport const getSocket = () => {\n  if (!socket) {\n    return initializeSocket();\n  }\n  return socket;\n};\n\nexport const joinChannel = (channelId) => {\n  const socketInstance = getSocket();\n  socketInstance.emit('join_channel', channelId);\n};\n\nexport const leaveChannel = (channelId) => {\n  const socketInstance = getSocket();\n  socketInstance.emit('leave_channel', channelId);\n};\n\nexport const sendMessage = (messageData) => {\n  const socketInstance = getSocket();\n  socketInstance.emit('send_message', messageData);\n};\n\nexport const subscribeToMessages = (callback) => {\n  const socketInstance = getSocket();\n  socketInstance.on('receive_message', (message) => {\n    callback(message);\n  });\n};\n\nexport const unsubscribeFromMessages = () => {\n  const socketInstance = getSocket();\n  socketInstance.off('receive_message');\n};\n\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n  }\n}; "],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAIC,MAAM;AAEV,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpCD,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;IACnCG,eAAe,EAAE;EACnB,CAAC,CAAC;EAEFF,MAAM,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEL,MAAM,CAACM,EAAE,CAAC;EACvD,CAAC,CAAC;EAEFN,MAAM,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf,CAAC;AAED,OAAO,MAAMO,SAAS,GAAGA,CAAA,KAAM;EAC7B,IAAI,CAACP,MAAM,EAAE;IACX,OAAOC,gBAAgB,CAAC,CAAC;EAC3B;EACA,OAAOD,MAAM;AACf,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAIC,SAAS,IAAK;EACxC,MAAMC,cAAc,GAAGH,SAAS,CAAC,CAAC;EAClCG,cAAc,CAACC,IAAI,CAAC,cAAc,EAAEF,SAAS,CAAC;AAChD,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIH,SAAS,IAAK;EACzC,MAAMC,cAAc,GAAGH,SAAS,CAAC,CAAC;EAClCG,cAAc,CAACC,IAAI,CAAC,eAAe,EAAEF,SAAS,CAAC;AACjD,CAAC;AAED,OAAO,MAAMI,WAAW,GAAIC,WAAW,IAAK;EAC1C,MAAMJ,cAAc,GAAGH,SAAS,CAAC,CAAC;EAClCG,cAAc,CAACC,IAAI,CAAC,cAAc,EAAEG,WAAW,CAAC;AAClD,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;EAC/C,MAAMN,cAAc,GAAGH,SAAS,CAAC,CAAC;EAClCG,cAAc,CAACP,EAAE,CAAC,iBAAiB,EAAGc,OAAO,IAAK;IAChDD,QAAQ,CAACC,OAAO,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAC3C,MAAMR,cAAc,GAAGH,SAAS,CAAC,CAAC;EAClCG,cAAc,CAACS,GAAG,CAAC,iBAAiB,CAAC;AACvC,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIpB,MAAM,EAAE;IACVA,MAAM,CAACqB,UAAU,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}