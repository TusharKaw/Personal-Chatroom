{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const userInfo = localStorage.getItem('userInfo');\n  if (userInfo) {\n    const token = JSON.parse(userInfo).token;\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Channel APIs\nexport const channelAPI = {\n  getChannels: () => api.get('/channels'),\n  getChannelById: id => api.get(`/channels/${id}`),\n  createChannel: channelData => api.post('/channels', channelData),\n  updateChannel: (id, channelData) => api.put(`/channels/${id}`, channelData),\n  deleteChannel: id => api.delete(`/channels/${id}`),\n  joinChannel: id => api.put(`/channels/${id}/join`),\n  leaveChannel: id => api.put(`/channels/${id}/leave`)\n};\n\n// Message APIs\nexport const messageAPI = {\n  getChannelMessages: (channelId, page = 1, limit = 50) => api.get(`/messages/channel/${channelId}?page=${page}&limit=${limit}`),\n  createMessage: messageData => api.post('/messages', messageData),\n  deleteMessage: id => api.delete(`/messages/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","userInfo","localStorage","getItem","token","JSON","parse","headers","Authorization","error","Promise","reject","channelAPI","getChannels","get","getChannelById","id","createChannel","channelData","post","updateChannel","put","deleteChannel","delete","joinChannel","leaveChannel","messageAPI","getChannelMessages","channelId","page","limit","createMessage","messageData","deleteMessage"],"sources":["/Users/tusharkaw/Downloads/GIT_Porjects_v2/Personal-Chatroom/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      const token = JSON.parse(userInfo).token;\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Channel APIs\nexport const channelAPI = {\n  getChannels: () => api.get('/channels'),\n  getChannelById: (id) => api.get(`/channels/${id}`),\n  createChannel: (channelData) => api.post('/channels', channelData),\n  updateChannel: (id, channelData) => api.put(`/channels/${id}`, channelData),\n  deleteChannel: (id) => api.delete(`/channels/${id}`),\n  joinChannel: (id) => api.put(`/channels/${id}/join`),\n  leaveChannel: (id) => api.put(`/channels/${id}/leave`),\n};\n\n// Message APIs\nexport const messageAPI = {\n  getChannelMessages: (channelId, page = 1, limit = 50) => \n    api.get(`/messages/channel/${channelId}?page=${page}&limit=${limit}`),\n  createMessage: (messageData) => api.post('/messages', messageData),\n  deleteMessage: (id) => api.delete(`/messages/${id}`),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAIF,QAAQ,EAAE;IACZ,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAACG,KAAK;IACxCJ,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOJ,MAAM;AACf,CAAC,EACAS,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG;EACxBC,WAAW,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC;EACvCC,cAAc,EAAGC,EAAE,IAAKtB,GAAG,CAACoB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAClDC,aAAa,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EAClEE,aAAa,EAAEA,CAACJ,EAAE,EAAEE,WAAW,KAAKxB,GAAG,CAAC2B,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;EAC3EI,aAAa,EAAGN,EAAE,IAAKtB,GAAG,CAAC6B,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACpDQ,WAAW,EAAGR,EAAE,IAAKtB,GAAG,CAAC2B,GAAG,CAAC,aAAaL,EAAE,OAAO,CAAC;EACpDS,YAAY,EAAGT,EAAE,IAAKtB,GAAG,CAAC2B,GAAG,CAAC,aAAaL,EAAE,QAAQ;AACvD,CAAC;;AAED;AACA,OAAO,MAAMU,UAAU,GAAG;EACxBC,kBAAkB,EAAEA,CAACC,SAAS,EAAEC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAClDpC,GAAG,CAACoB,GAAG,CAAC,qBAAqBc,SAAS,SAASC,IAAI,UAAUC,KAAK,EAAE,CAAC;EACvEC,aAAa,EAAGC,WAAW,IAAKtC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEa,WAAW,CAAC;EAClEC,aAAa,EAAGjB,EAAE,IAAKtB,GAAG,CAAC6B,MAAM,CAAC,aAAaP,EAAE,EAAE;AACrD,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}