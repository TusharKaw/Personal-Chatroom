{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Get user from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false,\n  isError: false,\n  errorMessage: ''\n};\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async ({\n  name,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n    },\n    resetError: state => {\n      state.isError = false;\n      state.errorMessage = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userInfo = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.payload;\n    }).addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userInfo = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.payload;\n    });\n  }\n});\nexport const {\n  logout,\n  resetError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","isLoading","isError","errorMessage","login","email","password","rejectWithValue","config","headers","data","post","setItem","stringify","error","response","message","register","name","authSlice","reducers","logout","state","removeItem","resetError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/tusharkaw/Downloads/GIT_Porjects_v2/Personal-Chatroom/frontend/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Get user from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false,\n  isError: false,\n  errorMessage: '',\n};\n\n// Login user\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.post(\n        '/api/users/login',\n        { email, password },\n        config\n      );\n\n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      );\n    }\n  }\n);\n\n// Register user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async ({ name, email, password }, { rejectWithValue }) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.post(\n        '/api/users',\n        { name, email, password },\n        config\n      );\n\n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      );\n    }\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n    },\n    resetError: (state) => {\n      state.isError = false;\n      state.errorMessage = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.userInfo = action.payload;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.errorMessage = action.payload;\n      })\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.userInfo = action.payload;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.errorMessage = action.payload;\n      });\n  },\n});\n\nexport const { logout, resetError } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBC,QAAQ,EAAEN,mBAAmB;EAC7BO,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAGZ,gBAAgB,CACnC,YAAY,EACZ,OAAO;EAAEa,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAClD,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,kBAAkB,EAClB;MAAEN,KAAK;MAAEC;IAAS,CAAC,EACnBE,MACF,CAAC;IAEDb,YAAY,CAACiB,OAAO,CAAC,UAAU,EAAEf,IAAI,CAACgB,SAAS,CAACH,IAAI,CAAC,CAAC;IAEtD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOP,eAAe,CACpBO,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM,OAAO,GAC3BF,KAAK,CAACE,OACZ,CAAC;EACH;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGzB,gBAAgB,CACtC,eAAe,EACf,OAAO;EAAE0B,IAAI;EAAEb,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACxD,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,YAAY,EACZ;MAAEO,IAAI;MAAEb,KAAK;MAAEC;IAAS,CAAC,EACzBE,MACF,CAAC;IAEDb,YAAY,CAACiB,OAAO,CAAC,UAAU,EAAEf,IAAI,CAACgB,SAAS,CAACH,IAAI,CAAC,CAAC;IAEtD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOP,eAAe,CACpBO,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM,OAAO,GAC3BF,KAAK,CAACE,OACZ,CAAC;EACH;AACF,CACF,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG5B,WAAW,CAAC;EACnC2B,IAAI,EAAE,MAAM;EACZnB,YAAY;EACZqB,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjB3B,YAAY,CAAC4B,UAAU,CAAC,UAAU,CAAC;MACnCD,KAAK,CAACtB,QAAQ,GAAG,IAAI;IACvB,CAAC;IACDwB,UAAU,EAAGF,KAAK,IAAK;MACrBA,KAAK,CAACpB,OAAO,GAAG,KAAK;MACrBoB,KAAK,CAACnB,YAAY,GAAG,EAAE;IACzB;EACF,CAAC;EACDsB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,KAAK,CAACwB,OAAO,EAAGN,KAAK,IAAK;MACjCA,KAAK,CAACrB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACD0B,OAAO,CAACvB,KAAK,CAACyB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC3CR,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACtB,QAAQ,GAAG8B,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACvB,KAAK,CAAC4B,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MAC1CR,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACpB,OAAO,GAAG,IAAI;MACpBoB,KAAK,CAACnB,YAAY,GAAG2B,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACV,QAAQ,CAACW,OAAO,EAAGN,KAAK,IAAK;MACpCA,KAAK,CAACrB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACD0B,OAAO,CAACV,QAAQ,CAACY,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC9CR,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACtB,QAAQ,GAAG8B,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACV,QAAQ,CAACe,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MAC7CR,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACpB,OAAO,GAAG,IAAI;MACpBoB,KAAK,CAACnB,YAAY,GAAG2B,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,MAAM;EAAEG;AAAW,CAAC,GAAGL,SAAS,CAACc,OAAO;AACvD,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}