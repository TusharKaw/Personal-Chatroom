{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Get user from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false,\n  isError: false,\n  errorMessage: ''\n};\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    console.log('login thunk called with email:', email);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Use 'http://localhost:5000/api/users/login' directly for debugging\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/users/login', {\n      email,\n      password\n    }, config);\n    console.log('Login success, data received:', data);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    console.error('Login failed:', error);\n    const errorMsg = error.response && error.response.data.message ? error.response.data.message : error.message;\n    console.error('Error message:', errorMsg);\n    return rejectWithValue(errorMsg);\n  }\n});\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async ({\n  name,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    console.log('register thunk called with email:', email);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Use 'http://localhost:5000/api/users' directly for debugging\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    console.log('Registration success, data received:', data);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    console.error('Registration failed:', error);\n    const errorMsg = error.response && error.response.data.message ? error.response.data.message : error.message;\n    console.error('Error message:', errorMsg);\n    return rejectWithValue(errorMsg);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n    },\n    resetError: state => {\n      state.isError = false;\n      state.errorMessage = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n      state.errorMessage = '';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userInfo = action.payload;\n      console.log('Login fulfilled, userInfo set:', action.payload);\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.payload;\n      console.error('Login rejected, error set:', action.payload);\n    }).addCase(register.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n      state.errorMessage = '';\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userInfo = action.payload;\n      console.log('Registration fulfilled, userInfo set:', action.payload);\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.payload;\n      console.error('Registration rejected, error set:', action.payload);\n    });\n  }\n});\nexport const {\n  logout,\n  resetError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","isLoading","isError","errorMessage","login","email","password","rejectWithValue","console","log","config","headers","data","post","setItem","stringify","error","errorMsg","response","message","register","name","authSlice","reducers","logout","state","removeItem","resetError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/tusharkaw/Downloads/GIT_Porjects_v2/Personal-Chatroom/frontend/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Get user from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false,\n  isError: false,\n  errorMessage: '',\n};\n\n// Login user\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      console.log('login thunk called with email:', email);\n      \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      // Use 'http://localhost:5000/api/users/login' directly for debugging\n      const { data } = await axios.post(\n        'http://localhost:5000/api/users/login',\n        { email, password },\n        config\n      );\n\n      console.log('Login success, data received:', data);\n      \n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      return data;\n    } catch (error) {\n      console.error('Login failed:', error);\n      \n      const errorMsg = error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        \n      console.error('Error message:', errorMsg);\n      \n      return rejectWithValue(errorMsg);\n    }\n  }\n);\n\n// Register user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async ({ name, email, password }, { rejectWithValue }) => {\n    try {\n      console.log('register thunk called with email:', email);\n      \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      // Use 'http://localhost:5000/api/users' directly for debugging\n      const { data } = await axios.post(\n        'http://localhost:5000/api/users',\n        { name, email, password },\n        config\n      );\n\n      console.log('Registration success, data received:', data);\n      \n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      return data;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      \n      const errorMsg = error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        \n      console.error('Error message:', errorMsg);\n      \n      return rejectWithValue(errorMsg);\n    }\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n    },\n    resetError: (state) => {\n      state.isError = false;\n      state.errorMessage = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.isError = false;\n        state.errorMessage = '';\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.userInfo = action.payload;\n        console.log('Login fulfilled, userInfo set:', action.payload);\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.errorMessage = action.payload;\n        console.error('Login rejected, error set:', action.payload);\n      })\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n        state.isError = false;\n        state.errorMessage = '';\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.userInfo = action.payload;\n        console.log('Registration fulfilled, userInfo set:', action.payload);\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.errorMessage = action.payload;\n        console.error('Registration rejected, error set:', action.payload);\n      });\n  },\n});\n\nexport const { logout, resetError } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}