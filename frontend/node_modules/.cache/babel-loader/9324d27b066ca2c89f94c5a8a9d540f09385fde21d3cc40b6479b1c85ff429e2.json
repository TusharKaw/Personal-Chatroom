{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  const userInfo = localStorage.getItem('userInfo');\n  if (userInfo) {\n    const token = JSON.parse(userInfo).token;\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Token added to request');\n  } else {\n    console.log('No token available');\n  }\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for debugging\napi.interceptors.response.use(response => {\n  console.log('API Response Success:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response$data, _error$config;\n  console.error('API Response Error:', error.response ? `${error.response.status}: ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}` : error.message, (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url);\n  return Promise.reject(error);\n});\n\n// Channel APIs\nexport const channelAPI = {\n  getChannels: () => api.get('/channels'),\n  getChannelById: id => api.get(`/channels/${id}`),\n  createChannel: channelData => api.post('/channels', channelData),\n  updateChannel: (id, channelData) => api.put(`/channels/${id}`, channelData),\n  deleteChannel: id => api.delete(`/channels/${id}`),\n  joinChannel: id => api.put(`/channels/${id}/join`),\n  leaveChannel: id => api.put(`/channels/${id}/leave`)\n};\n\n// Message APIs\nexport const messageAPI = {\n  getChannelMessages: (channelId, page = 1, limit = 50) => api.get(`/messages/channel/${channelId}?page=${page}&limit=${limit}`),\n  createMessage: messageData => api.post('/messages', messageData),\n  deleteMessage: id => api.delete(`/messages/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","userInfo","localStorage","getItem","token","JSON","parse","headers","Authorization","error","Promise","reject","response","status","_error$response$data","_error$config","data","message","channelAPI","getChannels","get","getChannelById","id","createChannel","channelData","post","updateChannel","put","deleteChannel","delete","joinChannel","leaveChannel","messageAPI","getChannelMessages","channelId","page","limit","createMessage","messageData","deleteMessage"],"sources":["/Users/tusharkaw/Downloads/GIT_Porjects_v2/Personal-Chatroom/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    \n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      const token = JSON.parse(userInfo).token;\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('Token added to request');\n    } else {\n      console.log('No token available');\n    }\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for debugging\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response Success:', response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', \n      error.response ? `${error.response.status}: ${error.response.data?.message || error.message}` : error.message,\n      error.config?.url\n    );\n    return Promise.reject(error);\n  }\n);\n\n// Channel APIs\nexport const channelAPI = {\n  getChannels: () => api.get('/channels'),\n  getChannelById: (id) => api.get(`/channels/${id}`),\n  createChannel: (channelData) => api.post('/channels', channelData),\n  updateChannel: (id, channelData) => api.put(`/channels/${id}`, channelData),\n  deleteChannel: (id) => api.delete(`/channels/${id}`),\n  joinChannel: (id) => api.put(`/channels/${id}/join`),\n  leaveChannel: (id) => api.put(`/channels/${id}/leave`),\n};\n\n// Message APIs\nexport const messageAPI = {\n  getChannelMessages: (channelId, page = 1, limit = 50) => \n    api.get(`/messages/channel/${channelId}?page=${page}&limit=${limit}`),\n  createMessage: (messageData) => api.post('/messages', messageData),\n  deleteMessage: (id) => api.delete(`/messages/${id}`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}